package sapxeplichthi;

import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.Scanner;

public class Main {
    public static void main(String[] args) throws Exception {
        Scanner in = new Scanner(new File("MONHOC.in"));
        int t = Integer.parseInt(in.nextLine());
        ArrayList<MonThi> mon = new ArrayList<>();
        while (t-- > 0)
            mon.add(new MonThi(in.nextLine(), in.nextLine(), in.nextLine()));
        in = new Scanner(new File("CATHI.in"));
        t = Integer.parseInt(in.nextLine());
        ArrayList<CaThi> ca = new ArrayList<>();
        for (int i = 1; i <= t; i++)
            ca.add(new CaThi(i, in.nextLine(), in.nextLine(), in.nextLine()));
        in = new Scanner(new File("LICHTHI.in"));
        ArrayList<LichThi> ds = new ArrayList<>();
        t = Integer.parseInt(in.nextLine());
        while (t-- > 0) {
            String str[] = in.nextLine().split(" ");
            MonThi monThi = new MonThi();
            CaThi caThi = new CaThi();
            for (MonThi m : mon)
                if (m.getMa().equals(str[1])) {
                    monThi = m;
                    break;
                }
            for (CaThi c : ca)
                if (c.getMa().equals(str[0])) {
                    caThi = c;
                    break;
                }
            ds.add(new LichThi(monThi, caThi, Integer.parseInt(str[2]), str[3]));
        }
        Collections.sort(ds);
        for (LichThi l : ds)
            System.out.println(l);
    }
}
package sapxeplichthi;

public class MonThi{
    private String ma, ten, hinhThuc;

    public MonThi() {
    }

    public MonThi(String ma, String ten, String hinhThuc) {
        this.ma = ma;
        this.ten = ten;
        this.hinhThuc = hinhThuc;
    }

    public String getMa() {
        return ma;
    }

    @Override
    public String toString() {
        return ten;
    }
}

package sapxeplichthi;

public class CaThi{
    private String ma, ngay, gio, phong;

    public CaThi() {
    }

    public CaThi(int stt, String ngay, String gio, String phong) {
        this.ma = "C" + String.format("%03d", stt);
        this.ngay = chuanHoaNgay(ngay);
        this.gio = chuanHoaGio(gio);
        this.phong = phong;
    }

    private String chuanHoaNgay(String ngay) {
        String str[] = ngay.split("/");
        int d = Integer.parseInt(str[0]);
        int m = Integer.parseInt(str[1]);
        int y = Integer.parseInt(str[2]);
        return String.format("%02d/%02d/%04d", d, m, y);
    }

    private String chuanHoaGio(String gio) {
        String str[] = gio.split(":");
        int g = Integer.parseInt(str[0]);
        int p = Integer.parseInt(str[1]);
        return String.format("%02d:%02d", g, p);
    }

    public String getNgay() {
        return ngay;
    }

    public String getGio() {
        return gio;
    }

    public String getMa() {
        return ma;
    }

    @Override
    public String toString() {
        return ngay + " " + gio + " " + phong;
    }
}
package sapxeplichthi;

public class LichThi implements Comparable<LichThi> {
    private MonThi monThi;
    private CaThi caThi;
    private String nhom, sinhVien;

    public LichThi(MonThi monThi, CaThi caThi, int nhom, String sinhVien) {
        this.monThi = monThi;
        this.caThi = caThi;
        this.nhom = String.format("%02d", nhom);
        this.sinhVien = sinhVien;
    }

    public int compareTo(LichThi l) {
        if (this.caThi.getNgay().compareTo(l.caThi.getNgay()) > 0) return 1;
        else if (this.caThi.getNgay().compareTo(l.caThi.getNgay()) == 0 &&
                this.caThi.getGio().compareTo(l.caThi.getGio()) > 0) return 1;
        else if (this.caThi.getNgay().compareTo(l.caThi.getNgay()) == 0 &&
                this.caThi.getGio().compareTo(l.caThi.getGio()) == 0 &&
                this.caThi.getMa().compareTo(l.caThi.getMa()) > 0) return 1;
        return -1;
    }

    @Override
    public String toString() {
        return caThi + " " + monThi + " " + nhom + " " + sinhVien;
    }
}
